name: Terraform

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the "main" branch
    push:
      branches:
      - main
    pull_request:
    workflow_dispatch: 

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENENT_ID }}
  ROOT_PATH: ${{ github.workspace }}/terraform-bhs
  #ROOT_PATH: '../terraform-bhs'

jobs:
# This workflow contains a single job called "scan"
  scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so follow-up steps can access it
      - uses: actions/checkout@v3
      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@main
        with:
          directory: ${{ github.workspace }}/terraform-bhs
          
          framework: terraform # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          
          
          output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          output_file_path: reports/results.sarif # folder and name of results file
          output_bc_ids: true # optional: output Bridgecrew platform IDs instead of checkov IDs
          download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
          
          log_level: DEBUG # optional: set log level. Default WARNING
     
  terraform_plan:
      name: 'Terraform Plan Stage'
      needs: scan
      runs-on: ubuntu-latest

      defaults:
        run:
          shell: bash
    
      steps:
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          #terrform_version: 0.12.25
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.ROOT_PATH }}

      - name: terraform plan
        run: terraform plan
        working-directory: ${{ env.ROOT_PATH }}

  terraform_apply:
      name: 'Terraform Apply Stage'
      runs-on: ubuntu-latest
      needs: terraform_plan # needs keyword similar to depends_on 
      environment: demo

      defaults:
        run:
          shell: bash
    
      steps:
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          #terrform_version: 0.12.25
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.ROOT_PATH }}

      - name: terraform apply
        run: terraform apply --auto-approve
        working-directory: ${{ env.ROOT_PATH }}
